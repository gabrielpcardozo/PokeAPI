Organização de Funções e Classes:
Uma boa prática é agrupar funções e classes relacionadas em módulos separados. 
Isso torna o código mais modular e mais fácil de manter. 
No seu caso, você pode criar um módulo para lidar com as interações 
com a API e outro módulo para definir as classes relacionadas aos treinadores e Pokémon.

Usar Métodos de Instância:
Ao invés de usar variáveis globais como poke e pokemon, 
é uma prática melhor passar as informações necessárias 
como parâmetros para os métodos ou usá-los como atributos de instância.

Separar as Funções de Exibição das de Coleta de Informações:
É uma boa ideia separar as funções que coletam informações da API das 
funções que exibem essas informações. 
Isso permite que você reutilize os dados coletados de diferentes maneiras.

Documentação e Comentários:
Adicione comentários às suas funções e classes para explicar o que elas fazem e como 
usá-las. Além disso, adicione docstrings para 
documentar o propósito e os parâmetros das funções.

Tratamento de Exceções:
Lembre-se de adicionar tratamento de exceções apropriado ao seu código para lidar 
com situações em que a API pode não responder ou retornar um erro.
